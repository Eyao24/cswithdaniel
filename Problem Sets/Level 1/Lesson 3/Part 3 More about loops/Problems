1. Determine whether the following are true or false:
  a. A break statement must be in a while loop.
  b. When a break statement is executed, it breaks out of the innermost loop it is in.
  c. A break statement can be used to break out of an if block or an else block.
  d. When a continue statement is used in a while loop, the execution goes to checking the condition.
  e. When a continue statement is used in a for loop, the execution goes to checking the condition.
  f. During a nested loop, every time the outer loop runs one iteration, the inner loops must completely finish.
  g. Variables defined in an if block or else block will disappear after the block is executed.
  h. Variables defined in a loop will disappear after the block is executed.
  i. If a variable is defined in an outer loop, an inner loop nested inside the outer loop can access the variable.
 
2. Determine the output:
for (int i = 0; i < 17; i += 2)
{
    System.out.println(i);
    if (i == 8) {continue;}
    if (i == 12) {break;}
    System.out.println(i);
}

3. Determine the output:
for (int i = 0; i < 5; i++)
{
    for (int j = 0; j < 6; j++)
    {
        System.out.print(i + j);
    }
    System.out.println();
}

4. Determine the output:
for (int i = 0; i < 5; i++)
{
    if (i == 2) {continue;}
    if (i == 4) {break;}
    for (int j = 0; j < 6; j++)
    {
        if (j == 2) {continue;}
        if (j == 4) {break;}
        System.out.print(i + j);
    }
    System.out.println();
}

5. Determine the output:
for (int a = 0; a < 2; a++)
{
    for (int b = 0; b < 2; b++)
    {
        for (int c = 0; c < 2; c++)
        {
            for (int d = 0; d < 2; d++)
            {
                System.out.println("" + a + b + c + d);
            }
        }
    }
}

6. Print all ordered pairs of integers (i, j) satisfying 14 <= i, j <= 19.

7. Print all ordered pairs of integers (i, j) satisfying -5 <= i < j <= 5, i is odd, and j is odd.

8. Print 5 squares of length 5 of dots aligned vertically.
(Use nested loops to print the following 5 times)
.....
.....
.....
.....
.....

9. Print all ordered pairs of integers (i, j) satisfying 0 <= i <= 10, i <= j <= 2 * i.


Challenge Problems:

10. Print all prime numbers less than 100.

11. Print all ordered pairs of primes (p, q) satisfying p, q <= 50.

12. Print the first 100 prime numbers.


