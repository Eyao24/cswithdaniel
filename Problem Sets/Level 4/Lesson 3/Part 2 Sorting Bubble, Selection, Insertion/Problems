1.
  a. Explain how bubble sort works in general.
  b. Explain how selection sort works in general.
  c. Explain how insertion sort works in general.

2. Perform bubble sort, selection sort, and insertion sort manually on the array {6, 9, 8, 4, 1}.

3.
  a. Create a method that takes in and sorts an ArrayList of Double using bubble sort.
  b. Create a method that takes in and sorts an ArrayList of Double using selection sort.
  c. Create a method that takes in and sorts an ArrayList of Double using insertion sort.
  
4. Create a method that uses selection sort to sort an array of int,
except put the largest element at the end instead of putting the smallest element at the beginning.
Example: on the array {6, 9, 8, 4, 1}, after each pass of the selection sort the array should be
{6, 1, 8, 4, 9}
{6, 1, 4, 8, 9}
{4, 1, 6, 8, 9}
{1, 4, 6, 8, 9}

5.
  a. What are the approximate runtimes of bubble sort, selection sort, and insertion sort?
  b. Can bubble sort or selection sort handle sorting arrays of length 5000000 within a reasonable amount of time?
  c. Can insertion sort handle sorting nearly sorted arrays of length 5000000 within a reasonable amount of time?
  d. On average, can insertion sort handle sorting randomized arrays of length 5000000 within a reasonable amound of time?
